A searchengine endpoint to accept complex query
API endpoint to search the annotation (key/value pair), the main difference between this endpoint and searchannotation is this one can be used to search different resources and return the images which satisfy the search conditions.
The query data has a similar format to the query for searchannotation.
Example:
   {
     "query_details": {
       "and_filters": [
         {
           "name": "Cell Line",
           "value": "hela",
           "operator": "equals",
           "resource": "image"
         },
         {
           "name": "Name (IDR number)",
           "value": "idr0008-rohn-actinome/screenB",
           "operator": "equals",
           "resource": "project"
         }
       ],
       "or_filters": [

       ],
       "case_sensitive": false
     }
    }

Another example uses 'in' operator:
{
   "query_details":{
      "and_filters":[
         {
            "name":"Gene Symbol",
            "value":[
               "Duoxa2",
               "Bach2",
               "Cxcr2",
               "Mysm1"
            ],
            "operator":"in",
            "resource":"image"
         },
        {
           "name": "Name (IDR number)",
           "value": "idr0043-uhlen-humanproteinatlas/experimentA",
           "operator": "equals",
           "resource": "project"
         }
      ]
   }
}

The maximum number of returned results is 1000, so if the number of results is bigger than that, a bookmark should be added to the query to call the next page. bookmark is returned with each page of results and should be used to call the next page.
Example of using bookmark:

  {
     "resource":"image",
     "query_details":{
        "and_filters":[
           {
              "name":"Cell Line",
              "operator":"equals",
              "query_type":"keyvalue",
              "resource":"image",
              "value":"hela"
           }
        ],
        "case_sensitive":false,
        "or_filters":[

        ]
     },
     "bookmark":
  [107448]

  }
---
tags:
 - Mixed Complex query

parameters:
  - name: return_columns
    description: return additional columns to help display the results in a table
    in: query
    type: boolean
    required: false
  - name: data
    in: body
    required: true
    #examples:
    #  query: {
    #    "resource": "image",
    #    "query_details": {
    #      "and_filters": [
    #        {
    #          "name": "Gene Symbol",
    #          "value": "pdx1",
    #          "operator": "equals",
    #          "resource": "image"
    #        }
    #      ],
    #      "or_filters": [#

    #      ],
    #      "case_sensitive": false
    #    },
    #    "mode": "usesearchterms"
    #  }

responses:
  200:
    description: A JSON contains the results
    examples:
      results: []
